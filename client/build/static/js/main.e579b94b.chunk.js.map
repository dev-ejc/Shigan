{"version":3,"sources":["utils/setAuthToken.js","state/auth/authAction.js","state/auth/types.js","state/stocks/stocksAction.js","state/stocks/types.js","components/layouts/Navbar.js","components/routes/PrivateRoute.js","components/pages/About.js","components/stocks/StockItem.js","components/stocks/Stocks.js","components/stocks/StockForm.js","components/stocks/StockVisuals.js","components/pages/User.js","components/pages/NotFound.js","state/alerts/alertsAction.js","state/alerts/types.js","components/auth/Register.js","components/auth/Login.js","components/layouts/Alert.js","state/auth/authReducer.js","state/alerts/alertsReducer.js","state/stocks/stocksReducer.js","state/index.js","store.js","App.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","clearErrors","dispatch","type","getStocks","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","setLoading","get","sent","payload","data","t0","stockError","stop","_x","apply","this","arguments","err","message","Navbar","isAuthenticated","auths","logout","clearStocks","title","authLinks","icon","react_default","createElement","react","className","react_router_dom","to","href","onClick","guestLinks","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","defaultProps","connect","state","Component","component","rest","objectWithoutProperties","react_router","assign","render","props","About","StockItem","price","stock","deleteStock","updateCurrentStock","_useState","useState","_useState2","slicedToArray","tweak","setTweak","_useState3","shares","_useState4","stateStock","setStateStock","useEffect","_id","companyName","image","ticker","src","alt","onSubmit","e","preventDefault","name","placeholder","value","onChange","objectSpread","defineProperty","target","key","prototype","setCurrentStock","PropTypes","func","isRequired","_ref3","_callee3","config","_context3","params","delete","concat","_x3","_ref4","_callee4","_context4","put","_x4","stocks","_ref$stocks","loading","role","map","stocks_StockItem","StockForm","addStock","date","Date","now","setStock","htmlFor","_ref2","_callee2","_context2","Content-Type","post","_x2","reduce","b","Math","round","stocks_StockVisuals","stocks_StockForm","stocks_Stocks","NotFound","setAlert","msg","length","setTimeout","register","formData","history","_ref$auths","error","email","password","password2","user","setUser","push","required","minLength","login","sessionStorage","Alert","alerts","alert","prototypes","object","initialState","current","filtered","combineReducers","undefined","action","setItem","removeItem","toConsumableArray","filter","regex","RegExp","match","middleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","App","es","layouts_Navbar","layouts_Alert","routes_PrivateRoute","exact","path","User","Register","Login","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.e579b94b.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst setAuthToken = token => {\n    if(token) {\n        axios.defaults.headers.common['x-auth-token'] = token\n    } else {\n        delete axios.defaults.headers.common['x-auth-token']\n    }\n}\n\nexport default setAuthToken","import { REGISTER_SUCCESS, AUTHENTICATE, REGISTER_FAIL, CLEAR_ERRORS, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from './types'\nimport setAuthToken from \"../../utils/setAuthToken\";\nimport axios from 'axios'\n\n// Authenticate\nexport const authenticate = () => dispatch => {\n    dispatch({\n      type: AUTHENTICATE\n    });\n};\n\n// Register User\n// TODO find a way to utilize https connections instead of http\nexport const register = formData => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  try {\n    const res = await axios.post(\"/api/users\", formData, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: REGISTER_FAIL,\n      payload: err.message\n    });\n  }\n};\n// Login User\nexport const login = formData => async dispatch => {\n  if (sessionStorage.token) {\n    authenticate()\n    setAuthToken(sessionStorage.token);\n  }\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  try {\n    const res = await axios.post(\"/api/auth\", formData, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    setAuthToken(sessionStorage.token);\n  } catch (err) {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: err.message\n    });\n  }\n};\n\n// Logout\nexport const logout = () => dispatch =>\n  dispatch({\n    type: LOGOUT\n  });\n  \n// Clear Errors\nexport const clearErrors = () => dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};\n","export const REGISTER_FAIL = 'REGISTER_FAIL'\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS'\nexport const AUTH_ERROR = 'AUTH_ERROR'\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\nexport const LOGOUT = 'LOGOUT'\nexport const AUTHENTICATE = 'AUTHENTICATE'\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'\nexport const SET_LOADING = 'SET_LOADING'","import {\n  ADD_STOCK,\n  DELETE_STOCK,\n  GET_STOCKS,\n  CLEAR_STOCKS,\n  SET_CURRENT_STOCK,\n  CLEAR_CURRENT_STOCK,\n  UPDATE_CURRENT_STOCK,\n  FILTER_STOCKS,\n  CLEAR_FILTER,\n  SET_LOADING,\n  STOCK_ERROR\n} from \"./types\";\nimport axios from \"axios\";\n\n// @todo abstract api requests\nexport const getStocks = () => async dispatch => {\n  try {\n    setLoading();\n    const res = await axios.get(\"/api/stocks\");\n    dispatch({\n      type: GET_STOCKS,\n      payload: res.data\n    });\n  } catch (err) {\n    stockError(err);\n  }\n};\n\n// Add Stock\nexport const addStock = (stock) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  try {\n    setLoading();\n    const res = await axios.post(\"/api/stocks\", stock, config);\n    dispatch({\n      type: ADD_STOCK,\n      payload: res.data\n    });\n  } catch (err) {\n    stockError(err);\n  }\n};\n\n// Delete Stock\nexport const deleteStock = id => async dispatch => {\n  const config = { params: {\n    id} };\n  try {\n    setLoading();\n    await axios.delete(`api/stocks/${id}`, config);\n    dispatch({\n      type: DELETE_STOCK,\n      payload: id\n    });\n  } catch (err) {\n    stockError(err);\n  }\n};\n\n//Update CURRENT_STOCK\nexport const updateCurrentStock = stock => async dispatch => {\n  try {\n    setLoading();\n    const res = await axios.put(`api/stocks/${stock._id}`, stock);\n    dispatch({\n      type: UPDATE_CURRENT_STOCK,\n      payload: res.data\n    });\n  } catch (err) {\n    stockError(err);\n  }\n};\n\n//Set CURRENT_STOCK\nexport const setCurrentStock = stock => dispatch => {\n  dispatch({\n    type: SET_CURRENT_STOCK,\n    payload: stock\n  });\n};\n\n//Clear CURRENT_STOCK\nexport const clearCurrentStock = () => dispatch => {\n  dispatch({\n    type: CLEAR_CURRENT_STOCK\n  });\n};\n\n//Filter Stocks\nexport const filterStocks = text => dispatch => {\n  dispatch({\n    type: FILTER_STOCKS,\n    payload: text\n  });\n};\n\n//Clear Filter\nexport const clearFilter = () => dispatch => {\n  dispatch({\n    type: CLEAR_FILTER\n  });\n};\n\n// Set Loading\nexport const setLoading = () => dispatch => {\n  dispatch({\n    type: SET_LOADING\n  });\n};\n\n// Clear Stocks\nexport const clearStocks = () => dispatch => {\n  dispatch({\n    type: CLEAR_STOCKS\n  });\n};\n\n//Stock Error\nexport const stockError = (err) => dispatch => {\n  dispatch({\n    type: STOCK_ERROR,\n    payload: err.message\n  });\n};\n","export const ADD_STOCK = 'ADD_STOCK'\nexport const DELETE_STOCK = 'DELETE_STOCK'\nexport const GET_STOCKS = 'GET_STOCKS'\nexport const CLEAR_STOCKS = 'CLEAR_STOCKS'\nexport const SET_CURRENT_STOCK = 'SET_CURRENT_STOCK'\nexport const STOCK_ERROR = 'STOCK_ERROR'\nexport const CLEAR_CURRENT_STOCK = 'CLEAR_CURRENT_STOCK'\nexport const UPDATE_CURRENT_STOCK = 'UPDATE_CURRENT_STOCK'\nexport const FILTER_STOCKS = 'FILTER_STOCKS'\nexport const SET_LOADING = 'SET_LOADING'\nexport const CLEAR_FILTER = 'CLEAR_FILTER'","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { logout } from '../../state/auth/authAction'\nimport { clearStocks } from '../../state/stocks/stocksAction'\n\nconst Navbar = ({auths:{isAuthenticated},logout,clearStocks, title, icon }) => {\n    const onLogout = () => {\n        logout()\n        clearStocks()\n    }\n\n    const authLinks = (\n        <Fragment>\n            <li className=\"nav-item mx-auto\"><Link className=\"nav-link\" to='/'>Home</Link></li>\n            <li className=\"nav-item mx-auto\"><Link className=\"nav-link\" to='/About'>About</Link></li>\n            <li className=\"nav-item mx-auto\">\n                <a className=\"nav-link\" href=\"/\"  onClick={onLogout}>\n                    <i className=\"fas fa-signout-alt\"></i>{' '}Logout\n                </a>\n            </li>\n        </Fragment>\n    )\n\n    const guestLinks = (\n        <Fragment>\n            <li className=\"nav-item mx-auto\"><Link className=\"nav-link\" to='/Register'>Register</Link></li>\n            <li className=\"nav-item mx-auto\"><Link className=\"nav-link\" to='/Login'>Login</Link></li>\n        </Fragment>\n    )\n    \n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-light\">\n            <a href=\"/\" className=\"navbar-brand mx-auto\">{title}</a>\n            <button className=\"navbar-toggler btn-block\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav ml-auto\">\n                {isAuthenticated ? authLinks : guestLinks}           \n            </ul>\n            </div>\n        </nav>\n    )\n}\n\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired,\n    icon: PropTypes.string,\n    auths: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    auths: state.auths\n})\n\nNavbar.defaultProps = {\n    title: 'Shigan'\n}\n\n\nexport default connect(mapStateToProps,{logout,clearStocks})(Navbar)\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nconst PrivateRoute = ({ auths:{ isAuthenticated },component: Component, ...rest }) => {  \n    if(isAuthenticated) {\n        return (\n            <Route { ...rest } render={props => <Component { ...props }/>} />\n        )    \n    }\n    return (\n        <Redirect to='/Login'/>\n    )\n}\n\nPrivateRoute.propTypes = {\n    auths: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auths:state.auths\n})\n\nexport default connect(mapStateToProps,{})(PrivateRoute)\n","import React from 'react'\n\nconst About = props => {\n    return (\n        <div>\n           <h1>About This App</h1>\n           <h3>Version 1.0.0</h3>\n           <p className=\"bg-dark p\">This is a full stack app for keeping stocks</p>\n           <p className=\"bg-primary\">Disclaimer: The following app is for educational purposes only</p> \n        </div>\n    )\n}\n\nexport default About\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { setCurrentStock, deleteStock, updateCurrentStock } from \"../../state/stocks/stocksAction\";\nimport { connect } from \"react-redux\";\n\nconst StockItem = ({ price, stock, deleteStock, updateCurrentStock }) => {\n  const [tweak, setTweak] = useState(false);\n  const toggle = () => {\n    setTweak(!tweak);\n  };\n\n  const [stateStock, setStateStock] = useState({\n    shares:0\n});\n\nuseEffect(() => {\n  setStateStock(stock);\n}, //eslint-disable-next-line\n []);\n\nconst { _id } = stock;\nconst { shares } = stateStock\nconst { companyName, image } = price\nconst onChange = e => {\n  setStateStock({ ...stateStock, [e.target.name]: e.target.value });\n};\n\nconst onDelete = () => {\n  deleteStock(_id);\n};\n\nconst onSubmit = e => {\n  e.preventDefault();\n  setTweak(false)\n  updateCurrentStock(stateStock);\n};\n\n  return (\n    <div className=\"card bg-secondary mt-1\">\n      <div className=\"card-body align-content-center\">\n        <h3 className=\"card-title text-dark text-center\">{stock.ticker}</h3>\n            <img src={image} className=\"card-img-top mx-auto\"alt=\"logo\" />\n            {tweak ? (\n                    <form className=\"form-inline mb-2\" onSubmit={onSubmit}>\n                    <div className=\"form-group\">\n                      <input\n                        className=\"form-control\"\n                        type=\"integer\"\n                        name=\"shares\"\n                        placeholder={0}\n                        value={shares}\n                        onChange={onChange}\n                      />\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-info form-control\">Update</button>\n                  </form>\n            ) : (\n              <Fragment>\n              <table className=\"table table-bordered table-responsive\">\n              <tbody>\n                <tr key={\"name\"}>\n                  <td className=\"text-right\">Name</td>\n                  <td>{companyName}</td>\n                </tr>\n                <tr key={\"price\"}>\n                  <td className=\"text-right\">Price</td>\n                  <td>{price.price}</td>\n                </tr>\n                  <tr key={\"shares\"}>\n                    <td className=\"text-right\">Shares</td>\n                    <td>{shares}</td>\n                  </tr>\n              </tbody>\n            </table>\n            </Fragment>\n            )}\n            <button\n              onClick={() => toggle()}\n              className=\"btn btn-dark  btn-block\"\n            >\n              {tweak ? \"Back\" : \"Edit\"}\n            </button>\n            <button onClick={onDelete} className=\"btn btn-danger btn-block\">\n                      Delete\n                    </button>\n          </div>\n        </div>\n  );\n};\n\nStockItem.prototype = {\n  setCurrentStock: PropTypes.func.isRequired,\n  deleteStock: PropTypes.func.isRequired, \n  updateCurrentStock: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({});\n\nexport default connect(\n  mapStateToProps,\n  { setCurrentStock, deleteStock, updateCurrentStock }\n)(StockItem);\n","import React from 'react'\nimport StockItem from './StockItem'\nimport { getStocks } from '../../state/stocks/stocksAction'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nconst Stocks = ({stocks:{stocks,loading}}) => {\n    let data = stocks\n    if (stocks === null || loading ) {\n        return (<div className=\"spinner-border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n       </div>)\n    } else {\n        return (\n            <div className='container'>\n                     {data.map((stock) => (\n                         <div className=\"container\" key={stock[\"stock\"]._id}>\n                            <StockItem  stock={stock[\"stock\"]} price={stock[\"price\"]} />\n                        </div>\n                    ))}      \n            </div>)\n    }\n}\n\nStocks.propTypes = {\n    stocks: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    stocks:state.stocks,\n});\n\nexport default connect(mapStateToProps, { getStocks })(Stocks)","import React, { useState } from \"react\";\nimport { addStock } from \"../../state/stocks/stocksAction\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst StockForm = ({addStock}) => {\n  const [stock, setStock] = useState({\n    ticker: \"\",\n    shares: 0,\n    date: Date.now()\n  });\n\n  const onChange = e => setStock({ ...stock, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    addStock(stock);\n    setStock({\n      ticker: \"\",\n      shares: 0,\n      date: Date.now()\n    });\n  };\n  const { shares, ticker } = stock;\n  return (\n    <div className=\"container border mt-1\">\n      <form className=\"form p-2\" onSubmit={onSubmit}>\n        <h2 className=\"form-title\">Add Stock</h2>\n        <div className=\"form-group\">\n          <label htmlFor=\"ticker\">Ticker</label>\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            name=\"ticker\"\n            placeholder=\"Ticker\"\n            value={ticker}\n            onChange={onChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"shares\">Shares</label>\n          <input\n            className=\"form-control\"\n            type=\"integer\"\n            name=\"shares\"\n            placeholder={0}\n            value={shares}\n            onChange={onChange}\n          />\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary btn-block\">\n          Add Stock\n        </button>\n      </form>\n    </div>\n  );\n};\n\nStockForm.prototype = {\n  addStock: PropTypes.func.isRequired\n};\nconst mapStateToProps = state => ({\n});\n\nexport default connect(\n  mapStateToProps,\n  { addStock }\n)(StockForm);\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nconst StockVisuals = ({stocks:{stocks,loading}}) => {\n    if(stocks === null || loading) {\n        return (\n            <div className=\"spinner-border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </div>\n        )\n    } else {\n        const value = stocks.reduce((a,b) => {\n            return a + (b.stock.shares * b.price.price)\n        },0)\n        return(<h1 className=\"text-primary text-center mb-2\">{`$${Math.round(100 * value)/100}`}</h1>)\n    }\n}\n\nStockVisuals.propTypes = {\n    stocks: PropTypes.object.isRequired\n}\nconst mapStateToProps = (state) => ( {\n    stocks: state.stocks\n})\n\nexport default connect(mapStateToProps,{})(StockVisuals)\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from 'react-redux'\nimport Stocks from '../stocks/Stocks'\nimport StockForm from '../stocks/StockForm'\nimport { getStocks } from \"../../state/stocks/stocksAction\";\nimport PropTypes from \"prop-types\"\nimport StockVisuals from \"../stocks/StockVisuals\";\n\nconst User = ({ getStocks, stocks:{loading,stocks}}) => {\n  const [tweak, setTweak] = useState(false);\n\n  const toggle = () => {\n    setTweak(!tweak);\n  }\n\n  useEffect(\n    () => {\n      \n        getStocks();\n    }, //eslint-disable-next-line\n    []\n  );\n\n  if (loading || stocks === null) {\n    return (<div className=\"d-flex justify-content-center\">\n    <div className=\"spinner-border text-primary\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n    </div>)\n  } else {\n  return (\n    <div className=\"container mt-2\">\n      <div className=\"row\">\n          <div className=\"col\">\n            <StockVisuals />\n            <button onClick={toggle}className=\"button btn-primary btn-block mb-2\">Purchase Stock</button>\n            {tweak ? <StockForm /> : <Stocks />}\n          </div>\n        </div>\n    </div>\n  );\n};\n}\nUser.propTypes = {\n  getStocks : PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state =>({\n  stocks:state.stocks\n})\n\nexport default connect(mapStateToProps, {getStocks})(User);\n","import React from 'react'\n\nconst NotFound = props => {\n    return (\n        <div>\n            <h1>Page Not Found</h1>\n        </div>\n    )\n}\n\nexport default NotFound","import {SET_ALERT, REMOVE_ALERT} from './types'\n\n// Set Alert\nexport const setAlert = (msg,type) => dispatch => {\n        const id = msg.length + type.length\n        dispatch({\n            type: SET_ALERT,\n            payload: {\n                msg,type,id\n            }\n        })\n        setTimeout(() => {\n            dispatch({type: REMOVE_ALERT,payload:id})\n        }, 5000)\n    }","export const SET_ALERT = 'SET_ALERT'\nexport const REMOVE_ALERT = 'REMOVE_ALERT'\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'\nexport const SET_LOADING = 'SET_LOADING'","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { setAlert } from '../../state/alerts/alertsAction'\nimport { register, clearErrors } from '../../state/auth/authAction'\nimport PropTypes from 'prop-types'\n\nconst Register = ({history, auths: {error, isAuthenticated}, register,clearErrors, setAlert}) => {\n    const [user,setUser] = useState({\n        name:'',\n        email:'',\n        password:'',\n        password2:''\n    })\n    const { name,email,password,password2 } = user\n    const onChange = e => {\n        setUser({...user,[e.target.name]:e.target.value })\n    }\n\n    useEffect(() => {\n        if (isAuthenticated) {\n            history.push('/')\n        }\n        if(error) {\n            setAlert(error, 'danger')\n            clearErrors()\n        }\n    },// eslint-disable-next-line\n    [error, isAuthenticated, history])\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        if(name === '' || email === '' || password === '') {\n            setAlert('Please enter all fields', 'danger')\n        } else if ( password !== password2 ) {\n            setAlert('Passwords do not match', 'danger')\n        } else {\n            register({\n                name,\n                email,\n                password\n            })\n        }\n    }\n\n    return (\n        <div className=\"form-container mt-2\">\n            <form className=\"form p-2\"onSubmit={onSubmit}>\n                <h1>\n                    Account <span className=\"text-primary\">Register</span>\n                </h1>\n                <div className=\"form-group\">\n                    <label htmlFor=\"name\">Name</label>\n                    <input className=\"form-control\" type=\"text\" name=\"name\" value={name} onChange={onChange} required />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email Address</label>\n                    <input className=\"form-control\" type=\"email\" name=\"email\" value={email} onChange={onChange} required />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input className=\"form-control\" type=\"password\" name=\"password\" value={password} onChange={onChange} required minLength='7'/>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password2\">password2</label>\n                    <input className=\"form-control\" type=\"password\" name=\"password2\" value={password2} onChange={onChange} required />\n                </div>\n                <input type=\"submit\" value=\"Register\" className=\"btn btn-primary btn-block\" />\n            </form>\n        </div>\n    )\n}\n\nRegister.propTypes = {\n    auths: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    auths: state.auths\n})\n\nexport default connect(mapStateToProps, {setAlert,register,clearErrors})(Register)\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { setAlert } from '../../state/alerts/alertsAction'\nimport { login, clearErrors } from '../../state/auth/authAction'\nimport PropTypes from 'prop-types'\n\nconst Login = ({history, setAlert,login,clearErrors, auths:{error,isAuthenticated}}) => {\n\n    const [user,setUser] = useState({\n        email:'',\n        password:''\n    })\n\n    const { email,password } = user\n\n    useEffect(() => {\n        if (isAuthenticated) {\n            history.push('/')\n        }\n        if(error) {\n            setAlert(error, 'danger')\n            clearErrors()\n        }\n    },// eslint-disable-next-line\n    [error, isAuthenticated, history])\n    const onChange = e => {\n        setUser({...user,[e.target.name]:e.target.value })\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        if( email === '' || password === '') {\n            setAlert('Please fill in all fields')\n        } else {\n            login({email,password})\n        }\n    }\n\n    return (\n        <div className=\"form-container mt-2\">\n            <form className=\"form p-2\" onSubmit={onSubmit}>\n            <h1 className=\"form-title\">\n                Account <span className=\"text-primary text-center\">Login</span>\n            </h1>\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email Address</label>\n                    <input className=\"form-control\" type=\"email\" name=\"email\" value={email} onChange={onChange} />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input className=\"form-control\" type=\"password\" name=\"password\" value={password} onChange={onChange} />\n                </div>\n                <input type=\"submit\" value=\"Login\" className=\"btn btn-primary btn-block\" />\n            </form>\n        </div>\n    )\n}\n\nLogin.propTypes = {\n    auths: PropTypes.object.isRequired,\n}\n\n\nconst mapStateToProps = state => ({\n    auths: state.auths\n})\n\nexport default connect(mapStateToProps, {setAlert,login,clearErrors})(Login)","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nconst Alert = ({alerts}) => {\n\n    return (\n            alerts.length > 0 && alerts.map(alert => (\n                <div key={alert.id} className={`alert alert-${alert.type} mt-3`}>\n                    <i className=\"fas fa-info-circle\" />{' '}{alert.msg}\n                </div>\n            )\n        )\n    )\n}\n\nAlert.prototypes ={\n    alerts: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    alerts: state.alerts\n})\n\nexport default connect(mapStateToProps,{})(Alert)\n","import { AUTHENTICATE, REGISTER_SUCCESS, REGISTER_FAIL, CLEAR_ERRORS, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from './types'\n\nconst initialState = {\n    isAuthenticated: false,\n    loading: true,\n    error: null\n  };\n\nexport default (state = initialState, action) => {\n    switch(action.type) {\n        case AUTHENTICATE:\n            return {\n                ...state,\n                isAuthenticated: true,\n                loading: false\n            }\n        case REGISTER_SUCCESS:\n        case LOGIN_SUCCESS:\n            sessionStorage.setItem('token',action.payload.token)\n            return {\n                ...state,\n                ...action.payload,\n                isAuthenticated: true,\n                loading: false\n            }\n        case LOGIN_FAIL:\n        case REGISTER_FAIL:\n        case AUTH_ERROR:\n        case LOGOUT:\n            sessionStorage.removeItem('token')\n            return {\n                ...state,\n                isAuthenticated: false,\n                loading: false,\n                error: action.payload\n            }\n        case CLEAR_ERRORS:\n                sessionStorage.removeItem('token')\n                return {\n                    ...state,\n                    error: null\n                }\n        default:\n            return state\n    }\n}","import {SET_ALERT, REMOVE_ALERT} from './types'\n\nconst initialState = []\n\nexport default (state=initialState ,action) => {\n    switch(action.type){\n        case SET_ALERT:\n            return [...state,\n            action.payload]\n\n        case REMOVE_ALERT:\n                return state.filter(alert => alert.id !== action.payload)\n        default:\n            return state\n    }\n}","import  { ADD_STOCK, DELETE_STOCK, GET_STOCKS, CLEAR_STOCKS, SET_CURRENT_STOCK, CLEAR_CURRENT_STOCK, UPDATE_CURRENT_STOCK, FILTER_STOCKS, CLEAR_FILTER, SET_LOADING, STOCK_ERROR } from './types'\n\nconst initialState = {\n    stocks: null,\n    current: null,\n    filtered: null,\n    error: null,\n    loading: false\n  };\n\nexport default (state = initialState,action) => {\n    switch (action.type) {\n        case GET_STOCKS:\n            return {\n                ...state,\n                stocks: action.payload,\n                loading:false\n            }\n        case ADD_STOCK:\n            return {\n                ...state,\n                stocks: [...state.stocks,action.payload],\n                loading:false\n            }\n        case DELETE_STOCK:\n            return {\n                ...state,\n                stocks: state.stocks.filter(stock => stock[\"stock\"]._id !== action.payload),\n                loading:false\n            }\n\n        case STOCK_ERROR:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case SET_CURRENT_STOCK: {\n            return {\n                ...state,\n                current:action.payload,\n                loading:false\n            }\n        }\n        \n        case UPDATE_CURRENT_STOCK: {\n            return {\n                ...state,\n                stocks: state.stocks.map(stock => stock[\"stock\"]._id === action.payload[\"stock\"]._id ? action.payload : stock),\n                loading:false\n            }\n        }\n\n        case CLEAR_STOCKS: {\n            return {\n                ...state,\n                stocks:null,\n                filtered:null,\n                error:null,\n                current:null,\n                loading:false\n            }\n        }\n\n        case CLEAR_CURRENT_STOCK: {\n            return {\n                ...state,\n                current:null,\n                loading:false\n            }\n        }\n\n        case FILTER_STOCKS: {\n            return {\n                ...state,\n                filtered:state.stocks.filter(stock => {\n                    const regex = new RegExp(`${action.payload}`, 'gi')\n                    return stock[\"stock\"].ticker.match(regex)                \n                }),\n                loading:false\n            }\n        }\n\n        case CLEAR_FILTER: {\n            return {\n                ...state,\n                filtered: null,\n                loading:false\n            }\n        }\n\n        case SET_LOADING:\n            return {\n                ...state,\n                loading: true\n            }\n\n        default:\n            return state\n    }    \n}","import { combineReducers } from 'redux'\nimport authReducer from './auth/authReducer';\nimport alertsReducer from './alerts/alertsReducer';\nimport stocksReducer from './stocks/stocksReducer';\n\nexport default combineReducers({\n    auths: authReducer,\n    alerts: alertsReducer,\n    stocks: stocksReducer\n}) ","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./state\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, initialState, composeEnhancers(applyMiddleware(...middleware)));\n\nexport default store;","import React, { Fragment } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/layouts/Navbar\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport PrivateRoute from \"./components/routes/PrivateRoute\";\nimport About from \"./components/pages/About\";\nimport User from \"./components/pages/User\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport Alert from \"./components/layouts/Alert\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <div className=\"container\">\n            <Alert />\n            <Switch>\n              <PrivateRoute exact path=\"/\" component={User} />\n              <Route exact path=\"/About\" component={About} />\n              <Route exact path=\"/Register\" component={Register} />\n              <Route exact path=\"/Login\" component={Login} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}